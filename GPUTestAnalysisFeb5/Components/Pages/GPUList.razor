@page "/GPUs"

@using GPUTestAnalysisFeb5.Components.Shared
@using GPUTestAnalysisFeb5.Shared.Entity
@using GPUTestAnalysisFeb5.Shared.Services
@using GPUTestAnalysisFeb5.Shared

@inject IGPUService GPUService

@attribute [StreamRendering(true)]

<h3>List of GPUs</h3>

@if(gpus == null)
{
    <span>Loading...</span>
}
else if (gpus.Count == 0)
{
    <span>No GPUs found.</span>
}
else
{
    <table class="table table-striped table-bordered table-hover">
        <thead class="table-dark">
            <th>GPU</th>
            <th>Parameter</th>
            <th>Expression</th>
            <th>Description</th>
        </thead>
        <tbody>
            @foreach (var gpu in gpus)
            {
                <tr> 
                    <td>@gpu.Type</td>
                    <td>@gpu.Parameter</td>
                    <td>@gpu.Expression</td>
                    <td>@gpu.Destription</td>
 @* // <EditGPUButton Id="gpu.Id" *@
                </tr>
            }
        </tbody>
    </table>
}

<br />
<br />
<CreateGPUButton />

@code {
    List<GPU>? gpus = new();

    protected override async Task OnInitializedAsync()
    {
        gpus = await GPUService.GetAllGPUs();
    }
}
